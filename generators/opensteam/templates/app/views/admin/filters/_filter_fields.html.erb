<% prefix = filter_fields.new_record? ? "new_filter" : "existing_filter" %>

<% fields_for "filter[#{prefix}][]", filter_fields do |ff| %>
  <tr>
    <td class="rowCount">
      <strong>
        <%= filter_fields.new_record? ? "X." : filter_fields_counter %>
      </strong>
      <%= ff.hidden_field :id %>
    </td>
    <td class="filter_key">
      <div class="dvStatic">
        <%= ff.select :key, model.filtered_keys %>
        <% javascript_tag do %>
          transform2ComboBox( $$('#dvFilterTableMainBody > tr').last().select('.filter_key select')[0], {} ) ;
        <% end %>
      </div>
    </td>
    <td class="filter_op">
      <div class="dvStatic">
        <%= ff.select :op, ["LIKE", "=", ">", "<", "!=" ] %>
        <% javascript_tag do %>
          transform2ComboBox( $$('#dvFilterTableMainBody > tr').last().select('.filter_op select')[0], {} ) ;
        <% end %>
      </div>
    </td>
    <td>
      <div class="dvStatic">
        <%= ff.text_field :val, :size => 20, :class => "inputFields", :style => "width:243px;" %>
      </div>
    </td>
    <td class="tdFilterLast">
      <!--  <table cellpadding="0" cellspacing="0" align="right">
              <tbody>
                <tr>
                  <td> -->
      <div class="dv-small-button">
        <%#= link_to_function "DELETE", "$(this).up('.tdFilterLast').up('tr').fade( { duration: 0.5, afterFinish: remove_filter } );" %>
        <%= link_to_function "DELETE", "$(this).up('.tdFilterLast').up('tr').remove(); " %>
      </div>
      <!--       </td>
                </tr>
              </tbody>
            </table>
      -->
    </td>
  </tr>
<% end %>
